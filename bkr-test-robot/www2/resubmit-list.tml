[
lappend ::auto_path $::env(HOME)/lib /usr/local/lib /usr/lib64 /usr/lib
package require tdom
package require sqlite3
package require runtestlib 1.1
package require getOpt
namespace import ::getOpt::* ::runtestlib::*

set permission yes
set ftime 0

cd [dbroot]
sqlite3 db testrun.db
db timeout 6000

#===============================================================================
if {[dict get $req -host] != "localhost"} {
	#set permission no
}

if {$permission != yes} {
	set warn {<span style="font-size:400%;">You have no permission to do this!<br>retrun ...</span>}
	set ftime 1
} elseif [dict exists $req -entity] {
	set entity [dict get $req -entity]
	lassign [Query qparse $entity 0] xentity
	if [dict exists $xentity testlist] {
		set testList [lindex [dict get $xentity testlist] 0]
		db transaction {
		foreach test [split $testList ";"] {
			if {$test == ""} continue
			set testid_ [lindex $test 0]
			set distro_gset_ [lrange $test 1 end]
			set sql {
				UPDATE OR IGNORE testrun
					set jobid='', testStat='', res='o', rstat='', taskuri='', abortedCnt=0, resdetail=''
					WHERE testid = $testid_ and distro_rgset = $distro_gset_;
				INSERT OR IGNORE INTO testrun (testid, distro_rgset, abortedCnt, res, testStat)
					VALUES($testid_, $distro_gset_, 0, '-', '')
			}
			db eval $sql
		}
		}
	}
	set info {<span style="font-size:400%;">Update ... Done!<br>return ...</span>}
}
]

<head>
<META 
     HTTP-EQUIV="Refresh"
     CONTENT="[set ftime]; URL=[string map {resubmit-list.tml index.tml} [dict get $req -uri]]">
</head>

<body>
</body>

