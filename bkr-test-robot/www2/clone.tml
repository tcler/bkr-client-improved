[
lappend ::auto_path $::env(HOME)/lib /usr/local/lib /usr/lib64 /usr/lib
package require tdom
package require sqlite3
package require runtestlib 1.1
package require getOpt
namespace import ::getOpt::* ::runtestlib::*

set permission yes
set ftime 0

cd [dbroot]
sqlite3 db testrun.db
db timeout 6000

#===============================================================================
if {[dict get $req -host] != "localhost"} {
	#set permission no
}

if {$permission != yes} {
	set warn {<span style="font-size:400%;">You have no permission to do this!<br>retrun ...</span>}
	set ftime 1
} elseif [dict exists $req -entity] {
	set entity [dict get $req -entity]
	lassign [Query qparse $entity 0] xentity
	if {[dict exists $xentity testlist] && [dict exists $xentity distro]} {
		set testList [lindex [dict get $xentity testlist] 0]
		set distro_gset [lindex [dict get $xentity distro] 0]
		set distro [lindex $distro_gset 0]
		set gset {}
		foreach v [lrange $distro_gset 1 end] {
			if [regexp -- {^-} $v] {
				lappend gset $v
				continue
			} else {
				if {[regexp -- {^kernel-} $v]} {
					lappend gset -nvr=$v
				} else {
					lappend gset -install=$v
				}
			}
		}
		set distro_gset_ [concat $distro $gset]

		db transaction {
		foreach testid_ [split $testList ";"] {
			if {$testid_ == ""} continue
			set sql {
				UPDATE OR IGNORE testrun
					set jobid='', testStat='', res='o', rstat='', taskuri='', abortedCnt=0, resdetail=''
					WHERE testid = $testid_ and distro_rgset = $distro_gset_;
				INSERT OR IGNORE INTO testrun (testid, distro_rgset, abortedCnt, res, testStat)
					VALUES($testid_, $distro_gset_, 0, '-', '')
			}
			db eval $sql
		}
		}
	}
	set info {<span style="font-size:400%;">Update ... Done!<br>return ...</span>}
}
]

<head>
<META 
     HTTP-EQUIV="Refresh"
     CONTENT="[set ftime];
     URL=[
	set uri [dict get $req -uri]
	set pkg [regsub -all {.*\?pkg=([-_a-zA-Z0-9]+)($|&.*)} $uri {\1}]
	if [regexp -- {.*&.*} $uri] {
		set uri "${uri}&run-${pkg}=[string map {= %3D { } +} $distro_gset_]"
	}
	string map {clone.tml index.tml} $uri]">
</head>

<body>
</body>

